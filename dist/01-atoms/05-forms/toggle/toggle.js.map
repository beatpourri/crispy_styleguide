{"version":3,"sources":["01-atoms/05-forms/toggle/toggle.js"],"names":["w","doc","undefined","ARIAswitch","create","widget","querySelectorAll","self","i","ariaLabelError","length","hasAttribute","getAttribute","setAttribute","removeAttribute","console","warn","addEventListener","actions","e","preventDefault","target","init","window","document"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA,CAAC,UAAUA,CAAV,EAAaC,GAAb,EAAkBC,SAAlB,EAA8B;AAAE;;AAE/B;AACA;;AAEA,MAAIC,aAAa,EAAjB;AACA;;;;;;;;;;;AAWAA,aAAWC,MAAX,GAAoB,YAAY;AAC9B;AACA,QAAIC,SAASJ,IAAIK,gBAAJ,CAAqB,6BAArB,CAAb;AACA,QAAIC,IAAJ;AACA,QAAIC,CAAJ;AACA;AACA,QAAIC,iBAAiB,6LAArB;;AAEA;AACA;AACA,SAAMD,IAAI,CAAV,EAAaA,IAAIH,OAAOK,MAAxB,EAAgCF,GAAhC,EAAsC;AACpC;AACAD,aAAOF,OAAOG,CAAP,CAAP;;AAEA;AACA;AACA,UAAK,CAACD,KAAKI,YAAL,CAAkB,MAAlB,CAAD,IAA8BJ,KAAKK,YAAL,CAAkB,MAAlB,MAA8B,QAAjE,EAA4E;AAC1EL,aAAKM,YAAL,CAAkB,MAAlB,EAA0B,QAA1B;AACD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAK,CAACN,KAAKI,YAAL,CAAkB,oBAAlB,CAAN,EAAgD;AAC9CJ,aAAKO,eAAL,CAAqB,UAArB;AACD;;AAED;AACA;AACA,UAAK,CAACP,KAAKI,YAAL,CAAkB,cAAlB,CAAN,EAA0C;AACxCJ,aAAKM,YAAL,CAAkB,cAAlB,EAAkC,OAAlC;AACD;;AAED;AACA;AACA;AACA,UAAK,CAACN,KAAKI,YAAL,CAAkB,YAAlB,CAAD,IAAoC,CAACJ,KAAKI,YAAL,CAAkB,iBAAlB,CAA1C,EAAiF;AAC/EI,gBAAQC,IAAR,CAAaP,cAAb;AACD;;AAEDF,WAAKU,gBAAL,CAAsB,OAAtB,EAA+Bd,WAAWe,OAA1C;AACD,KA7C6B,CA6C5B;AACH,GA9CD,CAjB6B,CA+D1B;;;AAIH;AACAf,aAAWe,OAAX,GAAqB,UAAWC,CAAX,EAAe;AAClCA,MAAEC,cAAF;AACA,SAAKP,YAAL,CAAkB,cAAlB,EAAkCM,EAAEE,MAAF,CAAST,YAAT,CAAsB,cAAtB,MAA0C,MAA1C,GAAmD,OAAnD,GAA6D,MAA/F;AACD,GAHD,CApE6B,CAuE1B;;;AAIH;AACA;AACA;AACAT,aAAWmB,IAAX,GAAkB,YAAY;AAC5BnB,eAAWC,MAAX;AACD,GAFD,CA9E6B,CAgF1B;;;AAIHD,aAAWmB,IAAX;AAED,CAtFD,EAsFIC,MAtFJ,EAsFYC,QAtFZ,E,CAsFuB;;;AAIvB;AACA;AACA","file":"toggle.js","sourcesContent":["// toggle.js\n// UNCOMMENT IF DRUPAL - see components/_meta/_01-foot.twig for attachBehaviors\n// Drupal.behaviors.buttonSwitch = {\n//   attach: function (context, settings) {\n\n(function (w, doc, undefined ) { // REMOVE IF DRUPAL\n\n  // enable strict mode\n  'use strict';\n\n  var ARIAswitch = {};\n  /**\n  /**\n   * Global Create\n   *\n   * This function validates that the minimum\n   * required markup is present to create the\n   * ARIA widget(s). Any additional markup elements\n   * or attributes that do not exist in the found\n   * required markup patterns will be generated\n   * via this function.\n   */\n  ARIAswitch.create = function () {\n    // hooks\n    var widget = doc.querySelectorAll('[data-action=\"aria-switch\"]');\n    var self;\n    var i;\n    // define error message here, rather than in the weeds of the code\n    var ariaLabelError = 'An attribute of \"data-missing-label\" has been added to a switch/switches that are missing aria-labelledby or aria-label attributes! Please add unique labels to the appropriate components!';\n\n    // if widgets exist, loop through all instances\n    // and set up appropriate attributes\n    for ( i = 0; i < widget.length; i++ ) {\n      // set this specific widget\n      self = widget[i];\n\n      // give each instance the role of switch if the role hasn't been set\n      // or if it was set to something else in error\n      if ( !self.hasAttribute('role') || self.getAttribute('role') !== 'switch' ) {\n        self.setAttribute('role', 'switch');\n      }\n\n      // since these sorts of buttons won't work if\n      // JavaScript is disabled, (hopefully) a disabled\n      // attribute is set to them by default. When JavaScript\n      // is on, we should remove the disabled attributes EXCEPT\n      // if a switch button is meant to be disabled by default,\n      // in which case, look for the data-keep-disabled attribute\n      // and DON'T remove that disabled attribute...\n      if ( !self.hasAttribute('data-keep-disabled') ) {\n        self.removeAttribute('disabled');\n      }\n\n      // if an instance doesn't have a set aria-checked attribute,\n      // then it must not be checked, so populate an aria-checked='false'\n      if ( !self.hasAttribute('aria-checked') ) {\n        self.setAttribute('aria-checked', 'false');\n      }\n\n      // log an error if an aria-label or labelledby attribute\n      // is not found on a switch. also add a 'data-missing-label' attribute\n      // to further call out what instance(s) are without appropriate labeling.\n      if ( !self.hasAttribute('aria-label') && !self.hasAttribute('aria-labelledby') ) {\n        console.warn(ariaLabelError);\n      }\n\n      self.addEventListener('click', ARIAswitch.actions);\n    } // for(widget.length)\n  }; // ARIAswitch.create()\n\n\n\n  // primary actions function\n  ARIAswitch.actions = function ( e ) {\n    e.preventDefault();\n    this.setAttribute('aria-checked', e.target.getAttribute('aria-checked') === 'true' ? 'false' : 'true');\n  }; // ARIAswitch.events()\n\n\n\n  // init function to run start-up functions.\n  // if expanding this script, place any other\n  // initialize functions within here.\n  ARIAswitch.init = function () {\n    ARIAswitch.create();\n  }; // ARIAswitch.init()\n\n\n\n  ARIAswitch.init();\n\n})( window, document );// REMOVE IF DRUPAL\n\n\n\n// UNCOMMENT IF DRUPAL\n//   }\n// };\n"]}